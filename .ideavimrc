" Base configuration
set showmode
set incsearch
set nu
set relativenumber
set ignorecase
set smartcase
set clipboard+=unnamed
set visualbell
set scrolloff=5

" IDE & Vim
set idearefactormode=normal
set ideastatusicon=gray
set easymotion

" Keymaps

" The leader key
let mapleader=" "

" Remaps
" Redo
nnoremap U <C-r>
" Delete current char into black hole register
nnoremap x "_x
" Delete previous char into black hole register
nnoremap X "_X
" Change rest of word into black hole register
nnoremap cw "_cw
" Change word into black hole register
nnoremap ciw "_ciw
" Comfort shortcuts
nnoremap <C-d> yyp
" Move to first char in line
nnoremap gf ^
" Move to last char in line
nnoremap gl $
" Goto closing/opening bracket pair
nnoremap gb %
" Copy current line into clipboard (without newline)
nnoremap <C-c> ^vg_y
" Select all
nmap <C-a> gg<S-v>G

" Better escape
imap jk <Esc>

" Surround marked text
xnoremap <leader>s xi()<Esc>P
xnoremap <leader>s[ xi[]<Esc>P
xnoremap <leader>s] xi[]<Esc>P
xnoremap <leader>s{ xi{}<Esc>P
xnoremap <leader>s} xi{}<Esc>P

" Terminal
nmap <C-t> <Action>(ActivateTerminalToolWindow)
nmap <leader>t <Action>(Terminal.OpenInTerminal)

" Zen-mode
nmap <C-z> <Action>(ToggleDistractionFreeMode)

" Find
nmap <C-f> <Action>(GotoFile)
nmap <C-r> <Action>(RecentFiles)
nmap <C-c> <Action>(GotoClass)

" Navigation
map J }
map K {
nmap sv <Action>(SplitVertically)
nmap ss <Action>(SplitHorizontally)
nmap sm <Action>(MoveEditorToOppositeTabGroup)
nmap sh <c-w>h
nmap sl <c-w>l
nmap sj <c-w>j
nmap sk <c-w>k
nmap <TAB> <Action>(PreviousTab)
nmap <S-TAB> <Action>(NextTab)
nmap <leader>1 <Action>(GoToTab1)
nmap <leader>2 <Action>(GoToTab2)
nmap <leader>3 <Action>(GoToTab3)
nmap <leader>4 <Action>(GoToTab4)
nmap <leader>5 <Action>(GoToTab5)
nmap <leader>6 <Action>(GoToTab6)
nmap <leader>7 <Action>(GoToTab7)
nmap <leader>8 <Action>(GoToTab8)
nmap <leader>9 <Action>(GoToTab9)
nmap ;q <Action>(CloseContent)

" Code interactions
map <leader>c <Action>(CommentByLineComment)
map <leader>C <Action>(CommentByBlockComment)
nmap <leader>r <Action>(RenameElement)
nmap <leader>f <Action>(ReformatCode)
xmap <leader>rf <Action>(Refactorings.QuickListPopupAction)
nmap <leader>su <Action>(ShowUsages)
nmap <leader>sU <Action>(FindUsages)
nmap <leader>m <Action>(CollapseRegion)
nmap <leader>M <Action>(ExpandRegion)
nmap <leader>am <Action>(CollapseAllRegions)
nmap <leader>aM <Action>(ExpandAllRegions)
nmap <leader>oi <Action>(OptimizeImports)

" Code information
nmap <leader>d <Action>(ShowHoverInfo)
nmap <leader>se <Action>(ShowErrorDescription)

" Code navigation
nmap gd <Action>(GotoDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gp <Action>(JumpToLastChange)
nmap gn <Action>(JumpToNextChange)
nmap gt <Action>(GotoTest)
nmap gne <Action>(GotoNextError)
nmap gpe <Action>(GotoPreviousError)
nmap gmu <Action>(MethodUp)
nmap gmd <Action>(MethodDown)

" Move line up or down
nmap <C-j> <Action>(MoveLineDown)
nmap <C-k> <Action>(MoveLineUp)

" Debugging
nmap <leader>dc <Action>(Debug)
nmap <leader>ds <Action>(Stop)
nmap <leader>db <Action>(ToggleLineBreakpoint)

" Run
nmap <leader>rc <Action>(Run)
nmap <leader>rx <Action>(ChooseRunConfiguration)
nmap <leader>rr <Action>(Rerun)
nmap <leader>rs <Action>(Stop)
nmap <leader>rt <Action>(RunTests)

" TODO
nmap <leader>to <Action>(ActivateTODOToolWindow)

" Configurations
nmap \\v <Action>(VimActions)

" Plugins
Plug 'easymotion/vim-easymotion'
map <leader>J <Plug>(easymotion-s)
map <leader>j <Plug>(easymotion-f)

Plug 'preservim/nerdtree'
map <c-n> :NERDTree<CR>
map <c-q> :NERDTreeClose<CR>

" Additional mappings
nnoremap <S-H> ^
nnoremap <S-L> $
vnoremap <S-H> ^
vnoremap <S-L> $

" Split screen movement
nnoremap <C-H> <C-w>h
noremap <C-L> <C-w>l

" redo
nnoremap <C-R> <C-r>

" Go to the next error using Rustover's GotoNextError ActionId
nmap ge <Action>(GotoNextError)

" Go to the previous error using Rustover's GotoPreviousError ActionId
nmap gE <Action>(GotoPreviousError)

nmap <leader>sp <Action>(SelectInProjectView)
